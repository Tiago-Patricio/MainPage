{"version":3,"sources":["Menu/Menu.js","Post/Post.js","About/About.js","MainPage/MainPage.js","KeepUp/KeepUp.js","App.js","serviceWorker.js","index.js"],"names":["Menu","className","to","href","Post","src","alt","About","MainPage","autoPlay","style","position","width","left","top","height","objectFit","transform","zIndex","KeepUp","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uYAkCeA,EA7BF,WAIT,OACI,oCACA,yBAAKC,UAAU,WACf,6BACI,kBAAC,IAAD,CAAMC,GAAG,UACb,uBAAGD,UAAU,WAAb,aAGA,6BACI,kBAAC,IAAD,CAAMC,GAAG,cACb,uBAAGD,UAAU,WAAb,iBAGA,6BACI,kBAAC,IAAD,CAAMC,GAAG,WACb,uBAAGD,UAAU,WAAb,eAKJ,uBAAGA,UAAU,WAAWE,KAAK,UAA7B,sBCSWC,G,MAnCF,WAET,OACI,oCACA,6BAASH,UAAU,SACf,yCACA,yBAAKA,UAAU,WAAWI,IAAI,wBAAwBC,IAAI,KAC1D,iOAIJ,uBAAGL,UAAY,WACXE,KAAO,+CADX,iBAGA,6BAASF,UAAU,SACnB,mDACA,yBAAKA,UAAU,WAAWI,IAAI,wBAAwBC,IAAI,KAC1D,4BAAI,6BAAK,6BAAT,iIAGJ,uBAAGL,UAAY,WACXE,KAAO,wDADX,iBAGI,6BAASF,UAAU,SACnB,iDACA,yBAAKA,UAAU,WAAWI,IAAI,mBAAmBC,IAAI,KACrD,4BAAI,6BAAK,6BAAT,4DAAuE,6BAAvE,0B,OCDOC,G,MAxBD,WACN,OACQ,yBAAKN,UAAU,aACf,yBAAKA,UAAU,UAAUI,IAAI,qBAAqBC,IAAI,KAEzD,wBAAIL,UAAU,aAAd,4CAAmE,6BAAK,6BAAxE,gDAE4C,6BAAK,6BAFjD,ysBCsBGO,G,YA3BC,WAIb,OACI,yBAAKP,UAAU,SACX,2BAAOQ,UAAQ,EACfC,MAAO,CACHC,SAAU,WACVC,MAAO,OACPC,KAAM,MACNC,IAAK,MACLC,OAAQ,OACRC,UAAW,QACXC,UAAW,wBACXC,OAAQ,MAEZb,IAfS,qCC+BNc,G,MAhCA,WAEX,OACI,yBAAKlB,UAAU,QACf,yBAAKA,UAAY,UACb,yBAAKA,UAAY,WAAYI,IAAM,qBAAqBC,IAAM,KAClE,6BAAK,6BACL,uBAAGL,UAAY,UAAUE,KAAO,qCAAhC,mBAIA,yBAAKF,UAAY,YACb,yBAAKA,UAAY,WAAWI,IAAM,uBAAuBC,IAAM,KACnE,6BAFA,IAEM,6BACN,uBAAGL,UAAY,UACfE,KAAO,+CADP,qBAIA,yBAAKF,UAAY,aACjB,yBAAKA,UAAY,WAAWI,IAAM,wBAAwBC,IAAM,KAChE,6BAFA,IAEM,6BACL,uBAAGL,UAAY,UACfE,KAAO,6CADP,yBCwBMiB,EApCH,WACV,OAEA,yBAAKnB,UAAU,OAEb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SAASI,IAAI,qBAAqBC,IAAI,KAEzD,kBAAC,IAAD,KACG,kBAAC,EAAD,MAEC,iCACE,kBAAC,IAAD,CAAOe,KAAK,aAAaC,OAAK,EAACC,UAAWnB,KAG5C,iCACE,kBAAC,IAAD,CAAOiB,KAAK,SAASC,OAAK,EAACC,UAAWhB,KAGxC,iCAEE,kBAAC,IAAD,CAAOc,KAAK,SAASC,OAAK,EAACC,UAAWf,KAGtC,iCACA,kBAAC,IAAD,CAAOa,KAAK,UAAUC,OAAK,EAACC,UAAWJ,QC3B3BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3ad6fd03.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Menu.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Menu = () => {\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className=\"Buttons\">\r\n        <div>\r\n            <Link to=\"/about\">\r\n        <a className=\"button1\"> About </a>\r\n        </Link>\r\n        </div>\r\n        <div>\r\n            <Link to=\"/portfolio\">\r\n        <a className=\"button2\"> Portfolio </a>\r\n        </Link>\r\n        </div>\r\n        <div>\r\n            <Link to=\"/keepup\">\r\n        <a className=\"button3\"> KeepUp </a>\r\n        </Link>\r\n       </div>\r\n    </div>\r\n\r\n    <a className=\"PageName\" href=\"/index\"> TIAGO PATRICIO </a>\r\n    </>\r\n)\r\n};\r\n\r\nexport default Menu;","import React from 'react'\r\nimport './Post.css'\r\n\r\nconst Post = () => {\r\n\r\n    return (\r\n        <>\r\n        <article className=\"Post1\">\r\n            <h1>GTFelinux</h1>\r\n            <img className=\"imgPost1\" src=\"/images/gtfelinux.jpg\" alt=\"\"/>\r\n            <h3> A burglar cat that wants to steal a milk bottle from a cow.\r\n                The burglar loses stamina as time passes, he must eliminate other cats to restore lives, he can also use other cats as checkpoints.</h3>\r\n            \r\n        </article>\r\n        <a className = \"button10\"\r\n            href = \"https://github.com/Tiago-Patricio/GTFelinux\" > See Project </a>\r\n\r\n        <article className=\"Post2\">\r\n        <h1>Interview Simulator</h1>\r\n        <img className=\"imgPost2\" src=\"/images/interview.png\" alt=\"\"/>\r\n        <h3><br/><br/>Interview Simulator is a text-based program that aims to help code cadets practice and get ready for their coding interview.</h3>\r\n    </article>\r\n\r\n    <a className = \"button11\"\r\n        href = \"https://github.com/Tiago-Patricio/InterviewSimulator\" > See Project </a>\r\n        \r\n        <article className=\"Post3\">\r\n        <h1>This very website</h1>\r\n        <img className=\"imgPost2\" src=\"/images/this.png\" alt=\"\"/>\r\n        <h3><br/><br/>Project created using tools such as Html, Css, Js(React) <br/>and lot's of love.</h3>\r\n        \r\n       \r\n       </article>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport './About.css';\r\n\r\n\r\nconst About = () => {\r\n        return (\r\n                <div className=\"selectAll\">\r\n                <img className=\"picture\" src=\"/images/avatar.jpg\" alt=\"\"/>\r\n\r\n             <h2 className=\"AboutText\"> ** A raspy low register voice speaks ** <br/><br/>\r\n\r\n            A long time ago in a galaxy far, far away....<br/><br/>\r\n           \r\n            From the coveted country of Portugal to the Indic ocean surrounded continent of Australia and back, rises a descendent of the Ancient Rome Aristocracy members.\r\n            \r\n            Wielding his many talents and attributes such as honor, passion, resilience and a bloody good singing voice he makes way though the challenges and hardships presented before him.\r\n            \r\n            Many have passed and surely many more shall come but the 3 headed beast at hand at this time is one of its kind, mostly constituted of debugging, configuration docs and uncaught exception, nonetheless an unworthy opponent in the presence of a caffeinated beverage of some sort.\r\n            \r\n            And just like so, he carries on at full throttle seeking the fulfillment of his destiny..\r\n            \r\n            </h2>\r\n            </div>\r\n            \r\n        )\r\n\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './MainPage.css';\r\n\r\n\r\nconst MainPage = () => {\r\n       \r\n    const videoSrc = './videos/felinuxHackathon.mp4'\r\n\r\n    return(\r\n        <div className=\"Video\">\r\n            <video autoPlay \r\n            style={{\r\n                position: \"absolute\",\r\n                width: \"100%\",\r\n                left: \"50%\",\r\n                top: \"50%\",\r\n                height: \"100%\",\r\n                objectFit: \"cover\",\r\n                transform: \"translate(-50%, -50%)\",\r\n                zIndex: \"-1\",\r\n            }}\r\n            src={videoSrc}/>\r\n        </div>\r\n\r\n)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default  MainPage;\r\n","import React from 'react';\r\nimport './KeepUp.css';\r\n\r\n\r\n\r\nconst KeepUp = () => {\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n        <div className = \"gitHub\">  \r\n            <img className = \"imgPost1\"  src = \"/images/github.png\" alt = \"\"/>\r\n        <br/><br/>\r\n        <a className = \"button4\" href = \"https://github.com/Tiago-Patricio\"> Go to GitHub </a> \r\n        </div>\r\n     \r\n   \r\n        <div className = \"linkedin\" >\r\n            <img className = \"imgPost1\" src = \"/images/linkedin.png\" alt = \"\"/>\r\n        <br/> < br/>\r\n        <a className = \"button5\"\r\n        href = \"https://www.linkedin.com/in/tiago-patricio/\" > Go to linkedIn </a> \r\n        </div>\r\n\r\n        <div className = \"instagram\" >\r\n        <img className = \"imgPost1\" src = \"/images/instagram.png\" alt = \"\"/>\r\n        <br/> < br/>\r\n         <a className = \"button6\"\r\n         href = \"https://www.instagram.com/itiagopatricio/\" > Go to instagram </a> \r\n        </div>\r\n        </div>\r\n\r\n   \r\n    )\r\n\r\n\r\n}\r\n\r\nexport default KeepUp;","import React from 'react';\nimport './App.css';\nimport Menu from './Menu/Menu';\nimport Post from './Post/Post';\nimport './Post/Post.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport About from './About/About';\nimport './background.css';\nimport MainPage from './MainPage/MainPage';\nimport KeepUp from './KeepUp/KeepUp';\n\n\n\n\nconst App = () => {\n  return (\n  \n  <div className=\"App\">\n    \n    <div className=\"rectangle\"/>\n      <img className=\"Avatar\" src=\"/images/avatar.jpg\" alt=\"\"/>\n    \n  <Router>\n     <Menu/>\n       \n      <section>\n        <Route path=\"/portfolio\" exact component={Post} />\n      </section>\n\n      <section>\n        <Route path=\"/about\" exact component={About} />\n      </section>\n\n      <section>\n        \n        <Route path=\"/index\" exact component={MainPage}/>\n       </section>\n\n        <section>\n        <Route path=\"/keepUp\" exact component={KeepUp}/>\n        </section>\n\n    </Router>\n   \n      </div>\n       \n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}