{"version":3,"sources":["Menu/Menu.js","About/About.js","Post/Post.js","KeepUp/KeepUp.js","About/MoreAbout.js","App.js","serviceWorker.js","index.js"],"names":["Menu","id","to","className","src","alt","About","Post","href","KeepUp","MoreAbout","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5eca52ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Menu.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Menu = () => {\r\n\r\n   \r\n\r\n    return (\r\n        \r\n        <>\r\n        \r\n    \r\n        <nav id=\"navbar\">\r\n       \r\n    \r\n        <div>\r\n            <Link to=\"/\">\r\n        <a className=\"button1\"> About </a>\r\n        </Link>\r\n        </div>\r\n        <div>\r\n            <Link to=\"/portfolio\">\r\n        <a className=\"button2\"> Portfolio </a>\r\n        </Link>\r\n        </div>\r\n        <div>\r\n            <Link to=\"/keepup\">\r\n        <a className=\"button3\"> KeepUp </a>\r\n        </Link>\r\n       </div>\r\n \r\n\r\n       <img className=\"PageName\" src=\"/images/tiagopatriciowhite.PNG\" alt=\"\"/>\r\n    </nav>\r\n    \r\n    </>\r\n)\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\nimport './About.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst About = () => {\r\n        return (\r\n           <>\r\n               <div className=\"selectAll\">  \r\n\r\n                        <div className=\"selective\">\r\n                       <img className=\"info1\" src=\"/images/info.PNG\" alt=\"\"/> \r\n                       <img className=\"picture1\" src=\"/images/avatar.JPG\" alt=\"\"/>\r\n                       </div>\r\n\r\n                       \r\n                     \r\n\r\n                     \r\n                 </div>\r\n               <img className=\"pcIcon\" src=\"/images/pcIcon.PNG\" alt=\"\"/>\r\n               <img className=\"pcIcon1\" src=\"/images/designPc.PNG\" alt=\"\"/>\r\n               <img className=\"pcIcon2\" src=\"/images/cameraIcon.PNG\" alt=\"\"/>\r\n               <div className=\"backgroundRectangle\"></div>\r\n               \r\n               <div>\r\n          <img className=\"PageName1\" src=\"/images/tiagopatricioblue.PNG\" alt=\"\"/>\r\n       </div>\r\n       <Link to=\"/moreabout\">\r\n        <a className=\"buttonMore\"> More </a>\r\n        </Link>\r\n               </>\r\n                )\r\n}\r\n\r\nexport default About;","import React from 'react'\r\nimport './Post.css'\r\n\r\nconst Post = () => {\r\n\r\n    return (\r\n        <div className=\"summonAll\" id=\"Post\">\r\n            <img className=\"projectsTitle\" src=\"/images/projects.PNG\" alt=\"\"/>\r\n        <div className=\"moveAll\">\r\n        <article className=\"Post1\">\r\n        \r\n            <h1>GTFelinux</h1>\r\n            <img className=\"imgPost1\" src=\"/images/gtfelinux.JPG\" alt=\"\"/>\r\n            <h3> A burglar cat that wants to steal a milk bottle from a cow.\r\n                The burglar loses stamina as time passes, he must eliminate other cats to restore lives, he can also use other cats as checkpoints.</h3>\r\n            \r\n        </article>\r\n        <a className = \"button10\"\r\n            href = \"https://github.com/Tiago-Patricio/GTFelinux\" > See Project </a>\r\n\r\n        <article className=\"Post2\">\r\n        \r\n        <h1>Interview Simulator</h1>\r\n        <img className=\"imgPost2\" src=\"/images/interview.PNG\" alt=\"\"/>\r\n        <h3><br/>Interview Simulator is a text-based program that aims to help code cadets practice and get ready for their coding interview.</h3>\r\n    </article>\r\n    <a className = \"button11\"\r\n        href = \"https://github.com/Tiago-Patricio/InterviewSimulator\" > See Project </a>\r\n\r\n    \r\n        \r\n        <article className=\"Post3\">\r\n        <h1>This very website</h1>\r\n        <img className=\"imgPost2\" src=\"/images/this.PNG\" alt=\"\"/>\r\n        <h3><br/>Project created using tools such as Html, Css, Js(React) and lot's of love.</h3>\r\n     </article>\r\n\r\n</div>\r\n\r\n        <img className=\"footerAbout2\" src=\"/images/footer.PNG\" alt=\"\"/>\r\n        <div className=\"moreAboutReactangle2\"></div>\r\n        <div className=\"moreAboutReactangle3\"></div>\r\n        <div className=\"moreAboutReactangle4\"></div>\r\n</div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport './KeepUp.css';\r\n\r\n\r\n\r\nconst KeepUp = () => {\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n        <div className = \"gitHub\">  \r\n            <img className = \"imgPost1\"  src = \"/images/github.png\" alt = \"\"/>\r\n        <br/><br/>\r\n        <a className = \"button4\" href = \"https://github.com/Tiago-Patricio\"> Go to GitHub </a> \r\n        </div>\r\n     \r\n   \r\n        <div className = \"linkedin\" >\r\n            <img className = \"imgPost1\" src = \"/images/linkedin.png\" alt = \"\"/>\r\n        <br/> < br/>\r\n        <a className = \"button5\"\r\n        href = \"https://www.linkedin.com/in/tiago-patricio/\" > Go to linkedIn </a> \r\n        </div>\r\n\r\n        <div className = \"instagram\" >\r\n        <img className = \"imgPost1\" src = \"/images/instagram.png\" alt = \"\"/>\r\n        <br/> < br/>\r\n         <a className = \"button6\"\r\n         href = \"https://www.instagram.com/itiagopatricio/\" > Go to instagram </a> \r\n        </div>\r\n        \r\n        <img className=\"footerUp\" src=\"/images/footer.png\" alt=\"\"/>\r\n        <div className=\"backgroundRectangleUp\"></div>\r\n        </div>\r\n\r\n        \r\n    )\r\n\r\n\r\n}\r\n\r\nexport default KeepUp;","import React from 'react';\r\nimport './About.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst MoreAbout = () => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"selectInfo\">\r\n                          <img className=\"info3\" src=\"/images/aboutabout.JPG\" alt=\"\"/>\r\n                          <img className=\"info2\" src=\"/images/text about.PNG\" alt=\"\"/>\r\n                         </div>\r\n            <img className=\"footerAbout\" src=\"/images/footer.PNG\" alt=\"\"/>\r\n            <div className=\"moreAboutReactangle\"></div>\r\n            <div className=\"backgroundRectangleMore\"></div>\r\n\r\n        <Link to=\"/\">\r\n            <a className=\"buttonLess\"> Back</a>\r\n        </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoreAbout;","import React from 'react';\nimport './App.css';\nimport Menu from './Menu/Menu';\nimport './Post/Post.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport About from './About/About';\nimport './background.css';\nimport Post from './Post/Post';\nimport KeepUp from './KeepUp/KeepUp';\nimport MoreAbout from './About/MoreAbout';\n\n\n\n\n\nconst App = () => {\n  return (\n  \n  <div className=\"App\">\n \n  <Router>\n    <Menu/>\n    <Switch>\n      <Route path='/' exact component={About}/>   \n      <Route path='/moreabout' exact component={MoreAbout}/>  \n      <Route path='/portfolio' component={Post}/>     \n      <Route path='/keepup' component={KeepUp}/>\n     </Switch>    \n  </Router>\n\n\n   \n      </div>\n       \n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}